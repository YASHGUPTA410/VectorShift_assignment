{"ast":null,"code":"var _jsxFileName = \"/Users/yashgupta/Downloads/vectorshift-assignment/frontend/src/data-form.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n// import {\n//     Box,\n//     TextField,\n//     Button,\n// } from '@mui/material';\n// import axios from 'axios';\n// import logger from './services/logger';\n\n// const endpointMapping = {\n//     'Notion': 'notion',\n//     'Airtable': 'airtable',\n//     'HubSpot': 'hubspot',\n// };\n\n// export const DataForm = ({ integrationType, credentials }) => {\n//     const [loadedData, setLoadedData] = useState(null);\n//     const endpoint = endpointMapping[integrationType];\n\n//     const handleLoad = async () => {\n//         const startTime = performance.now();\n//         try {\n//             logger.logUserInteraction('DataForm', 'LOAD_DATA_CLICK', {\n//                 integration_type: integrationType\n//             });\n\n//             const formData = new FormData();\n//             formData.append('credentials', JSON.stringify(credentials));\n\n//             const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\n//             const data = response.data;\n\n//             logger.logApiCall(\n//                 'DataForm',\n//                 `/integrations/${endpoint}/load`,\n//                 'POST',\n//                 startTime,\n//                 response.status,\n//                 {\n//                     integration_type: integrationType,\n//                     items_count: Array.isArray(data) ? data.length : 0\n//                 }\n//             );\n\n//             setLoadedData(data);\n\n//             logger.info('DataForm', 'DATA_LOAD_SUCCESS', {\n//                 integration_type: integrationType,\n//                 items_count: Array.isArray(data) ? data.length : 0,\n//                 duration_ms: performance.now() - startTime\n//             });\n//         } catch (e) {\n//             logger.error('DataForm', 'DATA_LOAD_ERROR', e, {\n//                 integration_type: integrationType,\n//                 endpoint: endpoint\n//             });\n//             alert(e?.response?.data?.detail);\n//         }\n//     }\n\n//     const handleClear = () => {\n//         logger.logUserInteraction('DataForm', 'CLEAR_DATA', {\n//             integration_type: integrationType\n//         });\n//         setLoadedData(null);\n//     }\n\n//     return (\n\n//         <div className=\"layout\">\n//         <div className=\"content\">\n//           <div className=\"page\">\n//             <div className=\"bg_circle-wrapper\">\n//               <div className=\"circle circle-one\" />\n//               <div className=\"circle circle-two\" />\n//               <div className=\"circle circle-three\" />\n//             </div>\n//             <div className=\"page-content\">\n//             <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' width='100%'>\n//            <Box display='flex' flexDirection='column' width='100%'>\n//              <TextField\n//                     label=\"Loaded Data\"\n//                     value={loadedData || ''}\n//                     sx={{mt: 2}}\n//                     InputLabelProps={{ shrink: true }}\n//                     disabled\n//                 />\n//                 <Button\n//                     onClick={handleLoad}\n//                     sx={{mt: 2}}\n//                     variant='contained'\n//                 >\n//                     Load Data\n//                 </Button>\n//                 <Button\n//                     onClick={handleClear}\n//                     sx={{mt: 1}}\n//                     variant='contained'\n//                 >\n//                     Clear Data\n//                 </Button>\n//             </Box>\n//         </Box>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n// }\n\nimport { useState } from 'react';\nimport { Box, TextField, Button } from '@mui/material';\nimport axios from 'axios';\nimport logger from './services/logger';\n\n// Maps integration types to API endpoints\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpointMapping = {\n  Notion: 'notion',\n  Airtable: 'airtable',\n  HubSpot: 'hubspot'\n};\nexport const DataForm = ({\n  integrationType,\n  credentials\n}) => {\n  _s();\n  const [loadedData, setLoadedData] = useState(null);\n  const endpoint = endpointMapping[integrationType];\n\n  // Load data from the integration endpoint\n  const handleLoad = async () => {\n    const startTime = performance.now();\n    try {\n      logger.logUserInteraction('DataForm', 'LOAD_DATA_CLICK', {\n        integration_type: integrationType\n      });\n      const formData = new FormData();\n      formData.append('credentials', JSON.stringify(credentials));\n      const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\n      const data = response.data;\n      logger.logApiCall('DataForm', `/integrations/${endpoint}/load`, 'POST', startTime, response.status, {\n        integration_type: integrationType,\n        items_count: Array.isArray(data) ? data.length : 0\n      });\n      setLoadedData(data);\n      logger.info('DataForm', 'DATA_LOAD_SUCCESS', {\n        integration_type: integrationType,\n        items_count: Array.isArray(data) ? data.length : 0,\n        duration_ms: performance.now() - startTime\n      });\n    } catch (e) {\n      var _e$response, _e$response$data;\n      logger.error('DataForm', 'DATA_LOAD_ERROR', e, {\n        integration_type: integrationType,\n        endpoint\n      });\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n\n  // Clear the loaded data\n  const handleClear = () => {\n    logger.logUserInteraction('DataForm', 'CLEAR_DATA', {\n      integration_type: integrationType\n    });\n    setLoadedData(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Loaded Data\",\n        value: loadedData || '',\n        sx: {\n          mt: 2\n        },\n        InputLabelProps: {\n          shrink: true\n        },\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoad,\n        sx: {\n          mt: 2\n        },\n        variant: \"contained\",\n        children: \"Load Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClear,\n        sx: {\n          mt: 1\n        },\n        variant: \"contained\",\n        children: \"Clear Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 13\n  }, this);\n};\n_s(DataForm, \"5cDt2cux/nLAg6lHurbYodgFI4w=\");\n_c = DataForm;\nvar _c;\n$RefreshReg$(_c, \"DataForm\");","map":{"version":3,"names":["useState","Box","TextField","Button","axios","logger","jsxDEV","_jsxDEV","endpointMapping","Notion","Airtable","HubSpot","DataForm","integrationType","credentials","_s","loadedData","setLoadedData","endpoint","handleLoad","startTime","performance","now","logUserInteraction","integration_type","formData","FormData","append","JSON","stringify","response","post","data","logApiCall","status","items_count","Array","isArray","length","info","duration_ms","e","_e$response","_e$response$data","error","alert","detail","handleClear","display","justifyContent","alignItems","flexDirection","width","children","label","value","sx","mt","InputLabelProps","shrink","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","_c","$RefreshReg$"],"sources":["/Users/yashgupta/Downloads/vectorshift-assignment/frontend/src/data-form.js"],"sourcesContent":["// import { useState } from 'react';\n// import {\n//     Box,\n//     TextField,\n//     Button,\n// } from '@mui/material';\n// import axios from 'axios';\n// import logger from './services/logger';\n\n// const endpointMapping = {\n//     'Notion': 'notion',\n//     'Airtable': 'airtable',\n//     'HubSpot': 'hubspot',\n// };\n\n// export const DataForm = ({ integrationType, credentials }) => {\n//     const [loadedData, setLoadedData] = useState(null);\n//     const endpoint = endpointMapping[integrationType];\n\n//     const handleLoad = async () => {\n//         const startTime = performance.now();\n//         try {\n//             logger.logUserInteraction('DataForm', 'LOAD_DATA_CLICK', {\n//                 integration_type: integrationType\n//             });\n\n//             const formData = new FormData();\n//             formData.append('credentials', JSON.stringify(credentials));\n            \n//             const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\n//             const data = response.data;\n            \n//             logger.logApiCall(\n//                 'DataForm',\n//                 `/integrations/${endpoint}/load`,\n//                 'POST',\n//                 startTime,\n//                 response.status,\n//                 {\n//                     integration_type: integrationType,\n//                     items_count: Array.isArray(data) ? data.length : 0\n//                 }\n//             );\n\n//             setLoadedData(data);\n            \n//             logger.info('DataForm', 'DATA_LOAD_SUCCESS', {\n//                 integration_type: integrationType,\n//                 items_count: Array.isArray(data) ? data.length : 0,\n//                 duration_ms: performance.now() - startTime\n//             });\n//         } catch (e) {\n//             logger.error('DataForm', 'DATA_LOAD_ERROR', e, {\n//                 integration_type: integrationType,\n//                 endpoint: endpoint\n//             });\n//             alert(e?.response?.data?.detail);\n//         }\n//     }\n\n//     const handleClear = () => {\n//         logger.logUserInteraction('DataForm', 'CLEAR_DATA', {\n//             integration_type: integrationType\n//         });\n//         setLoadedData(null);\n//     }\n\n//     return (\n       \n//         <div className=\"layout\">\n//         <div className=\"content\">\n//           <div className=\"page\">\n//             <div className=\"bg_circle-wrapper\">\n//               <div className=\"circle circle-one\" />\n//               <div className=\"circle circle-two\" />\n//               <div className=\"circle circle-three\" />\n//             </div>\n//             <div className=\"page-content\">\n//             <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' width='100%'>\n//            <Box display='flex' flexDirection='column' width='100%'>\n//              <TextField\n//                     label=\"Loaded Data\"\n//                     value={loadedData || ''}\n//                     sx={{mt: 2}}\n//                     InputLabelProps={{ shrink: true }}\n//                     disabled\n//                 />\n//                 <Button\n//                     onClick={handleLoad}\n//                     sx={{mt: 2}}\n//                     variant='contained'\n//                 >\n//                     Load Data\n//                 </Button>\n//                 <Button\n//                     onClick={handleClear}\n//                     sx={{mt: 1}}\n//                     variant='contained'\n//                 >\n//                     Clear Data\n//                 </Button>\n//             </Box>\n//         </Box>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n// }\n\n\nimport { useState } from 'react';\nimport { Box, TextField, Button } from '@mui/material';\nimport axios from 'axios';\nimport logger from './services/logger';\n\n// Maps integration types to API endpoints\nconst endpointMapping = {\n  Notion: 'notion',\n  Airtable: 'airtable',\n  HubSpot: 'hubspot',\n};\n\nexport const DataForm = ({ integrationType, credentials }) => {\n  const [loadedData, setLoadedData] = useState(null);\n  const endpoint = endpointMapping[integrationType];\n\n  // Load data from the integration endpoint\n  const handleLoad = async () => {\n    const startTime = performance.now();\n    try {\n      logger.logUserInteraction('DataForm', 'LOAD_DATA_CLICK', { integration_type: integrationType });\n      const formData = new FormData();\n      formData.append('credentials', JSON.stringify(credentials));\n      \n      const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\n      const data = response.data;\n      \n      logger.logApiCall(\n        'DataForm',\n        `/integrations/${endpoint}/load`,\n        'POST',\n        startTime,\n        response.status,\n        { integration_type: integrationType, items_count: Array.isArray(data) ? data.length : 0 }\n      );\n      setLoadedData(data);\n      logger.info('DataForm', 'DATA_LOAD_SUCCESS', {\n        integration_type: integrationType,\n        items_count: Array.isArray(data) ? data.length : 0,\n        duration_ms: performance.now() - startTime\n      });\n    } catch (e) {\n      logger.error('DataForm', 'DATA_LOAD_ERROR', e, { integration_type: integrationType, endpoint });\n      alert(e?.response?.data?.detail);\n    }\n  };\n\n  // Clear the loaded data\n  const handleClear = () => {\n    logger.logUserInteraction('DataForm', 'CLEAR_DATA', { integration_type: integrationType });\n    setLoadedData(null);\n  };\n\n  return (\n    \n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" width=\"100%\">\n              <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\n                <TextField\n                  label=\"Loaded Data\"\n                  value={loadedData || ''}\n                  sx={{ mt: 2 }}\n                  InputLabelProps={{ shrink: true }}\n                  disabled\n                />\n                <Button onClick={handleLoad} sx={{ mt: 2 }} variant=\"contained\">\n                  Load Data\n                </Button>\n                <Button onClick={handleClear} sx={{ mt: 1 }} variant=\"contained\">\n                  Clear Data\n                </Button>\n              </Box>\n            </Box>\n       \n  );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}