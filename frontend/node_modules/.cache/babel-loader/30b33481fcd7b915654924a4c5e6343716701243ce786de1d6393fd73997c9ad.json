{"ast":null,"code":"var _jsxFileName = \"/Users/yashgupta/Downloads/vectorshift-assignment/frontend/src/integrations/airtable.js\",\n  _s = $RefreshSig$();\n// airtable.js\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AirtableIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  // Local state to manage connection status\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  /**\n   * Initiates the OAuth process by opening a new window\n   * to handle Airtable authorization.\n   */\n  const handleConnectClick = async () => {\n    try {\n      console.log('Initiating Airtable connection...');\n      setIsConnecting(true);\n\n      // Create form data with user and organization info\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n\n      // Request authorization URL from the server\n      const response = await axios.post('http://localhost:8000/integrations/airtable/authorize', formData);\n      const authURL = response === null || response === void 0 ? void 0 : response.data;\n      console.log('Received authorization URL:', authURL);\n\n      // Open the authorization URL in a new window\n      const newWindow = window.open(authURL, 'Airtable Authorization', 'width=600, height=600');\n\n      // Poll every 200ms to detect when the OAuth window is closed\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          console.log('OAuth window closed. Proceeding to fetch credentials...');\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      console.error('Error during authorization:', e);\n      setIsConnecting(false);\n      alert((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail) || 'Authorization failed');\n    }\n  };\n\n  /**\n   * Called when the OAuth window is closed.\n   * This function fetches the Airtable credentials from the server.\n   */\n  const handleWindowClosed = async () => {\n    try {\n      console.log('Fetching Airtable credentials...');\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post('http://localhost:8000/integrations/airtable/credentials', formData);\n      const credentials = response.data;\n      console.log('Received credentials:', credentials);\n\n      // If credentials exist, update the connection state and integration parameters\n      if (credentials) {\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials,\n          type: 'Airtable'\n        }));\n      }\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      console.error('Error fetching credentials:', e);\n      alert((e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail) || 'Failed to fetch credentials');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  // Check for existing credentials when the component mounts or integrationParams changes\n  useEffect(() => {\n    console.log('Checking initial connection status...');\n    setIsConnected(!!(integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials));\n  }, [integrationParams]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Parameters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: isConnected ? undefined : handleConnectClick,\n        color: isConnected ? 'success' : 'primary',\n        disabled: isConnecting,\n        style: {\n          pointerEvents: isConnected ? 'none' : 'auto',\n          cursor: isConnected ? 'default' : 'pointer',\n          opacity: isConnected ? 1 : undefined\n        },\n        children: isConnected ? 'Airtable Connected' : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this) : 'Connect to Airtable'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(AirtableIntegration, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = AirtableIntegration;\nvar _c;\n$RefreshReg$(_c, \"AirtableIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","axios","jsxDEV","_jsxDEV","AirtableIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","console","log","formData","FormData","append","response","post","authURL","data","newWindow","window","open","pollTimer","setInterval","closed","clearInterval","handleWindowClosed","e","_e$response","_e$response$data","error","alert","detail","credentials","prev","type","_e$response2","_e$response2$data","sx","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","justifyContent","variant","onClick","undefined","color","disabled","style","pointerEvents","cursor","opacity","size","_c","$RefreshReg$"],"sources":["/Users/yashgupta/Downloads/vectorshift-assignment/frontend/src/integrations/airtable.js"],"sourcesContent":["// airtable.js\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\n\nexport const AirtableIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\n  // Local state to manage connection status\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  /**\n   * Initiates the OAuth process by opening a new window\n   * to handle Airtable authorization.\n   */\n  const handleConnectClick = async () => {\n    try {\n      console.log('Initiating Airtable connection...');\n      setIsConnecting(true);\n\n      // Create form data with user and organization info\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n\n      // Request authorization URL from the server\n      const response = await axios.post(\n        'http://localhost:8000/integrations/airtable/authorize',\n        formData\n      );\n      const authURL = response?.data;\n      console.log('Received authorization URL:', authURL);\n\n      // Open the authorization URL in a new window\n      const newWindow = window.open(\n        authURL,\n        'Airtable Authorization',\n        'width=600, height=600'\n      );\n\n      // Poll every 200ms to detect when the OAuth window is closed\n      const pollTimer = window.setInterval(() => {\n        if (newWindow?.closed !== false) {\n          console.log('OAuth window closed. Proceeding to fetch credentials...');\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      console.error('Error during authorization:', e);\n      setIsConnecting(false);\n      alert(e?.response?.data?.detail || 'Authorization failed');\n    }\n  };\n\n  /**\n   * Called when the OAuth window is closed.\n   * This function fetches the Airtable credentials from the server.\n   */\n  const handleWindowClosed = async () => {\n    try {\n      console.log('Fetching Airtable credentials...');\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n\n      const response = await axios.post(\n        'http://localhost:8000/integrations/airtable/credentials',\n        formData\n      );\n      const credentials = response.data;\n      console.log('Received credentials:', credentials);\n\n      // If credentials exist, update the connection state and integration parameters\n      if (credentials) {\n        setIsConnected(true);\n        setIntegrationParams(prev => ({ ...prev, credentials, type: 'Airtable' }));\n      }\n    } catch (e) {\n      console.error('Error fetching credentials:', e);\n      alert(e?.response?.data?.detail || 'Failed to fetch credentials');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  // Check for existing credentials when the component mounts or integrationParams changes\n  useEffect(() => {\n    console.log('Checking initial connection status...');\n    setIsConnected(!!integrationParams?.credentials);\n  }, [integrationParams]);\n\n  return (\n    <Box sx={{ mt: 2 }}>\n      <p>Parameters</p>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        sx={{ mt: 2 }}\n      >\n        <Button\n          variant=\"contained\"\n          onClick={isConnected ? undefined : handleConnectClick}\n          color={isConnected ? 'success' : 'primary'}\n          disabled={isConnecting}\n          style={{\n            pointerEvents: isConnected ? 'none' : 'auto',\n            cursor: isConnected ? 'default' : 'pointer',\n            opacity: isConnected ? 1 : undefined,\n          }}\n        >\n          {isConnected ? (\n            'Airtable Connected'\n          ) : isConnecting ? (\n            <CircularProgress size={20} />\n          ) : (\n            'Connect to Airtable'\n          )}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}