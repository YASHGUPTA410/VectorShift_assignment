{"ast":null,"code":"var _jsxFileName = \"/Users/yashgupta/Downloads/vectorshift-assignment/frontend/src/integration-form.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Box, Autocomplete, TextField } from '@mui/material';\nimport { AirtableIntegration } from './integrations/airtable';\nimport { NotionIntegration } from './integrations/notion';\nimport { HubSpotIntegration } from './integrations/hubspot';\nimport { DataForm } from './data-form';\nimport logger from './services/logger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst integrationMapping = {\n  'Notion': NotionIntegration,\n  'Airtable': AirtableIntegration,\n  'HubSpot': HubSpotIntegration\n};\nexport const IntegrationForm = () => {\n  _s();\n  const [integrationParams, setIntegrationParams] = useState({});\n  const [user, setUser] = useState('TestUser');\n  const [org, setOrg] = useState('TestOrg');\n  const [currType, setCurrType] = useState(null);\n  const CurrIntegration = integrationMapping[currType];\n\n  // Log component mount\n  useEffect(() => {\n    logger.info('IntegrationForm', 'COMPONENT_MOUNT');\n    return () => {\n      logger.info('IntegrationForm', 'COMPONENT_UNMOUNT');\n    };\n  }, []);\n\n  // Log integration type changes\n  useEffect(() => {\n    if (currType) {\n      logger.info('IntegrationForm', 'INTEGRATION_TYPE_CHANGED', {\n        type: currType,\n        user_id: user,\n        org_id: org\n      });\n    }\n  }, [currType, user, org]);\n\n  // Log integration params changes\n  useEffect(() => {\n    if (integrationParams.type) {\n      logger.info('IntegrationForm', 'INTEGRATION_PARAMS_UPDATED', {\n        type: integrationParams.type,\n        has_credentials: Boolean(integrationParams.credentials)\n      });\n    }\n  }, [integrationParams]);\n  const handleUserChange = e => {\n    const newUser = e.target.value;\n    logger.logUserInteraction('IntegrationForm', 'USER_CHANGE', {\n      previous: user,\n      new: newUser\n    });\n    setUser(newUser);\n  };\n  const handleOrgChange = e => {\n    const newOrg = e.target.value;\n    logger.logUserInteraction('IntegrationForm', 'ORG_CHANGE', {\n      previous: org,\n      new: newOrg\n    });\n    setOrg(newOrg);\n  };\n  const handleIntegrationTypeChange = (e, value) => {\n    logger.logUserInteraction('IntegrationForm', 'INTEGRATION_TYPE_SELECT', {\n      selected_type: value,\n      user_id: user,\n      org_id: org\n    });\n    setCurrType(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"layout\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg_circle-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle circle-one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle circle-two\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle circle-three\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"center-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-row\",\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: user,\n                onChange: handleUserChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              value: org,\n              onChange: handleOrgChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n              id: \"integration-type\",\n              options: Object.keys(integrationMapping),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"Integration Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 38\n              }, this),\n              onChange: handleIntegrationTypeChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), currType && /*#__PURE__*/_jsxDEV(CurrIntegration, {\n            user: user,\n            org: org,\n            integrationParams: integrationParams,\n            setIntegrationParams: setIntegrationParams\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), (integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.credentials) && /*#__PURE__*/_jsxDEV(DataForm, {\n            integrationType: integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.type,\n            credentials: integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.credentials\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(IntegrationForm, \"IaNxmgGMZHKiIKMT00HsJz7NFJU=\");\n_c = IntegrationForm;\nvar _c;\n$RefreshReg$(_c, \"IntegrationForm\");","map":{"version":3,"names":["useState","useEffect","Box","Autocomplete","TextField","AirtableIntegration","NotionIntegration","HubSpotIntegration","DataForm","logger","jsxDEV","_jsxDEV","integrationMapping","IntegrationForm","_s","integrationParams","setIntegrationParams","user","setUser","org","setOrg","currType","setCurrType","CurrIntegration","info","type","user_id","org_id","has_credentials","Boolean","credentials","handleUserChange","e","newUser","target","value","logUserInteraction","previous","new","handleOrgChange","newOrg","handleIntegrationTypeChange","selected_type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","options","Object","keys","renderInput","params","label","integrationType","_c","$RefreshReg$"],"sources":["/Users/yashgupta/Downloads/vectorshift-assignment/frontend/src/integration-form.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n    Box,\n    Autocomplete,\n    TextField,\n} from '@mui/material';\nimport { AirtableIntegration } from './integrations/airtable';\nimport { NotionIntegration } from './integrations/notion';\nimport { HubSpotIntegration } from './integrations/hubspot';\nimport { DataForm } from './data-form';\nimport logger from './services/logger';\n\nconst integrationMapping = {\n    'Notion': NotionIntegration,\n    'Airtable': AirtableIntegration,\n    'HubSpot': HubSpotIntegration,\n};\n\nexport const IntegrationForm = () => {\n    const [integrationParams, setIntegrationParams] = useState({});\n    const [user, setUser] = useState('TestUser');\n    const [org, setOrg] = useState('TestOrg');\n    const [currType, setCurrType] = useState(null);\n    const CurrIntegration = integrationMapping[currType];\n\n    // Log component mount\n    useEffect(() => {\n        logger.info('IntegrationForm', 'COMPONENT_MOUNT');\n        return () => {\n            logger.info('IntegrationForm', 'COMPONENT_UNMOUNT');\n        };\n    }, []);\n\n    // Log integration type changes\n    useEffect(() => {\n        if (currType) {\n            logger.info('IntegrationForm', 'INTEGRATION_TYPE_CHANGED', {\n                type: currType,\n                user_id: user,\n                org_id: org\n            });\n        }\n    }, [currType, user, org]);\n\n    // Log integration params changes\n    useEffect(() => {\n        if (integrationParams.type) {\n            logger.info('IntegrationForm', 'INTEGRATION_PARAMS_UPDATED', {\n                type: integrationParams.type,\n                has_credentials: Boolean(integrationParams.credentials)\n            });\n        }\n    }, [integrationParams]);\n\n    const handleUserChange = (e) => {\n        const newUser = e.target.value;\n        logger.logUserInteraction('IntegrationForm', 'USER_CHANGE', {\n            previous: user,\n            new: newUser\n        });\n        setUser(newUser);\n    };\n\n    const handleOrgChange = (e) => {\n        const newOrg = e.target.value;\n        logger.logUserInteraction('IntegrationForm', 'ORG_CHANGE', {\n            previous: org,\n            new: newOrg\n        });\n        setOrg(newOrg);\n    };\n\n    const handleIntegrationTypeChange = (e, value) => {\n        logger.logUserInteraction('IntegrationForm', 'INTEGRATION_TYPE_SELECT', {\n            selected_type: value,\n            user_id: user,\n            org_id: org\n        });\n        setCurrType(value);\n    };\n\n  return (\n    <div className=\"layout\">\n    <div className=\"content\">\n      <div className=\"page\">\n        <div className=\"bg_circle-wrapper\">\n          <div className=\"circle circle-one\" />\n          <div className=\"circle circle-two\" />\n          <div className=\"circle circle-three\" />\n        </div>\n        <div className=\"page-content\">\n          <div className='center-div'>\n        <div className='text-row'>\n        <TextField\n   \n            value={user}\n            onChange={handleUserChange}\n         \n        />\n        </div>\n        <TextField\n          \n            value={org}\n            onChange={handleOrgChange}\n       \n        />\n        <Autocomplete\n            id=\"integration-type\"\n            options={Object.keys(integrationMapping)}\n    \n            renderInput={(params) => <TextField {...params} label=\"Integration Type\" />}\n            onChange={handleIntegrationTypeChange}\n        />\n        </div>\n        {currType && \n        \n            <CurrIntegration user={user} org={org} integrationParams={integrationParams} setIntegrationParams={setIntegrationParams} />\n     \n        }\n        {integrationParams?.credentials && \n    \n            <DataForm integrationType={integrationParams?.type} credentials={integrationParams?.credentials} />\n      \n        }\n    \n   \n    </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}