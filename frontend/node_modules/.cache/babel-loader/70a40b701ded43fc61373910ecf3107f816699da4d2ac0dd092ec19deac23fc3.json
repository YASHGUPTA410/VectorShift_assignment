{"ast":null,"code":"// logger.js\nconst LOG_LEVELS = {\n  INFO: 'INFO',\n  ERROR: 'ERROR',\n  DEBUG: 'DEBUG',\n  WARN: 'WARN'\n};\nclass Logger {\n  constructor() {\n    this.metadata = {\n      userAgent: navigator.userAgent,\n      url: window.location.href,\n      timestamp: new Date().toISOString()\n    };\n  }\n  formatLogEntry(level, component, action, details = {}) {\n    return {\n      timestamp: new Date().toISOString(),\n      level,\n      component,\n      action,\n      details: {\n        ...details,\n        url: window.location.href\n      },\n      metadata: this.metadata\n    };\n  }\n  info(component, action, details = {}) {\n    const logEntry = this.formatLogEntry(LOG_LEVELS.INFO, component, action, details);\n    console.info(`[${logEntry.timestamp}] ${component} - ${action}:`, details);\n    this.sendToServer(logEntry);\n  }\n  error(component, action, error, details = {}) {\n    const logEntry = this.formatLogEntry(LOG_LEVELS.ERROR, component, action, {\n      ...details,\n      error: {\n        message: error.message,\n        stack: error.stack,\n        name: error.name\n      }\n    });\n    console.error(`[${logEntry.timestamp}] ${component} - ${action}:`, error, details);\n    this.sendToServer(logEntry);\n  }\n  debug(component, action, details = {}) {\n    const logEntry = this.formatLogEntry(LOG_LEVELS.DEBUG, component, action, details);\n    console.debug(`[${logEntry.timestamp}] ${component} - ${action}:`, details);\n    this.sendToServer(logEntry);\n  }\n  warn(component, action, details = {}) {\n    const logEntry = this.formatLogEntry(LOG_LEVELS.WARN, component, action, details);\n    console.warn(`[${logEntry.timestamp}] ${component} - ${action}:`, details);\n    this.sendToServer(logEntry);\n  }\n\n  // Performance logging\n  logPerformance(component, action, startTime, details = {}) {\n    const duration = performance.now() - startTime;\n    this.info(component, action, {\n      ...details,\n      duration_ms: duration\n    });\n  }\n\n  // API call logging\n  logApiCall(component, endpoint, method, startTime, status, details = {}) {\n    const duration = performance.now() - startTime;\n    this.info(component, 'API_CALL', {\n      endpoint,\n      method,\n      status,\n      duration_ms: duration,\n      ...details\n    });\n  }\n\n  // User interaction logging\n  logUserInteraction(component, action, details = {}) {\n    this.info(component, action, {\n      ...details,\n      timestamp: new Date().toISOString()\n    });\n  }\n\n  // Optional: Send logs to backend\n  async sendToServer(logEntry) {\n    // In development, we'll just console log\n    if (process.env.NODE_ENV === 'development') {\n      return;\n    }\n\n    // In production, you could send logs to your backend\n    try {\n      await fetch('http://localhost:8000/logs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(logEntry)\n      });\n    } catch (error) {\n      console.error('Failed to send log to server:', error);\n    }\n  }\n}\n\n// Create a singleton instance\nconst logger = new Logger();\nexport default logger;","map":{"version":3,"names":["LOG_LEVELS","INFO","ERROR","DEBUG","WARN","Logger","constructor","metadata","userAgent","navigator","url","window","location","href","timestamp","Date","toISOString","formatLogEntry","level","component","action","details","info","logEntry","console","sendToServer","error","message","stack","name","debug","warn","logPerformance","startTime","duration","performance","now","duration_ms","logApiCall","endpoint","method","status","logUserInteraction","process","env","NODE_ENV","fetch","headers","body","JSON","stringify","logger"],"sources":["/Users/yashgupta/Downloads/vectorshift-assignment/frontend/src/services/logger.js"],"sourcesContent":["// logger.js\nconst LOG_LEVELS = {\n    INFO: 'INFO',\n    ERROR: 'ERROR',\n    DEBUG: 'DEBUG',\n    WARN: 'WARN'\n};\n\nclass Logger {\n    constructor() {\n        this.metadata = {\n            userAgent: navigator.userAgent,\n            url: window.location.href,\n            timestamp: new Date().toISOString()\n        };\n    }\n\n    formatLogEntry(level, component, action, details = {}) {\n        return {\n            timestamp: new Date().toISOString(),\n            level,\n            component,\n            action,\n            details: {\n                ...details,\n                url: window.location.href\n            },\n            metadata: this.metadata\n        };\n    }\n\n    info(component, action, details = {}) {\n        const logEntry = this.formatLogEntry(LOG_LEVELS.INFO, component, action, details);\n        console.info(`[${logEntry.timestamp}] ${component} - ${action}:`, details);\n        this.sendToServer(logEntry);\n    }\n\n    error(component, action, error, details = {}) {\n        const logEntry = this.formatLogEntry(LOG_LEVELS.ERROR, component, action, {\n            ...details,\n            error: {\n                message: error.message,\n                stack: error.stack,\n                name: error.name\n            }\n        });\n        console.error(`[${logEntry.timestamp}] ${component} - ${action}:`, error, details);\n        this.sendToServer(logEntry);\n    }\n\n    debug(component, action, details = {}) {\n        const logEntry = this.formatLogEntry(LOG_LEVELS.DEBUG, component, action, details);\n        console.debug(`[${logEntry.timestamp}] ${component} - ${action}:`, details);\n        this.sendToServer(logEntry);\n    }\n\n    warn(component, action, details = {}) {\n        const logEntry = this.formatLogEntry(LOG_LEVELS.WARN, component, action, details);\n        console.warn(`[${logEntry.timestamp}] ${component} - ${action}:`, details);\n        this.sendToServer(logEntry);\n    }\n\n    // Performance logging\n    logPerformance(component, action, startTime, details = {}) {\n        const duration = performance.now() - startTime;\n        this.info(component, action, {\n            ...details,\n            duration_ms: duration\n        });\n    }\n\n    // API call logging\n    logApiCall(component, endpoint, method, startTime, status, details = {}) {\n        const duration = performance.now() - startTime;\n        this.info(component, 'API_CALL', {\n            endpoint,\n            method,\n            status,\n            duration_ms: duration,\n            ...details\n        });\n    }\n\n    // User interaction logging\n    logUserInteraction(component, action, details = {}) {\n        this.info(component, action, {\n            ...details,\n            timestamp: new Date().toISOString()\n        });\n    }\n\n    // Optional: Send logs to backend\n    async sendToServer(logEntry) {\n        // In development, we'll just console log\n        if (process.env.NODE_ENV === 'development') {\n            return;\n        }\n\n        // In production, you could send logs to your backend\n        try {\n            await fetch('http://localhost:8000/logs', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(logEntry)\n            });\n        } catch (error) {\n            console.error('Failed to send log to server:', error);\n        }\n    }\n}\n\n// Create a singleton instance\nconst logger = new Logger();\n\nexport default logger;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}