{"ast":null,"code":"var _jsxFileName = \"/Users/yashgupta/Downloads/vectorshift-assignment/frontend/src/integration-form.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Box, Autocomplete, TextField } from '@mui/material';\nimport { AirtableIntegration } from './integrations/airtable';\nimport { NotionIntegration } from './integrations/notion';\nimport { HubSpotIntegration } from './integrations/hubspot';\nimport { DataForm } from './data-form';\nimport logger from './services/logger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst integrationMapping = {\n  'Notion': NotionIntegration,\n  'Airtable': AirtableIntegration,\n  'HubSpot': HubSpotIntegration\n};\nexport const IntegrationForm = () => {\n  _s();\n  const [integrationParams, setIntegrationParams] = useState({});\n  const [user, setUser] = useState('TestUser');\n  const [org, setOrg] = useState('TestOrg');\n  const [currType, setCurrType] = useState(null);\n  const CurrIntegration = integrationMapping[currType];\n\n  // Log component mount\n  useEffect(() => {\n    logger.info('IntegrationForm', 'COMPONENT_MOUNT');\n    return () => {\n      logger.info('IntegrationForm', 'COMPONENT_UNMOUNT');\n    };\n  }, []);\n\n  // Log integration type changes\n  useEffect(() => {\n    if (currType) {\n      logger.info('IntegrationForm', 'INTEGRATION_TYPE_CHANGED', {\n        type: currType,\n        user_id: user,\n        org_id: org\n      });\n    }\n  }, [currType, user, org]);\n\n  // Log integration params changes\n  useEffect(() => {\n    if (integrationParams.type) {\n      logger.info('IntegrationForm', 'INTEGRATION_PARAMS_UPDATED', {\n        type: integrationParams.type,\n        has_credentials: Boolean(integrationParams.credentials)\n      });\n    }\n  }, [integrationParams]);\n  const handleUserChange = e => {\n    const newUser = e.target.value;\n    logger.logUserInteraction('IntegrationForm', 'USER_CHANGE', {\n      previous: user,\n      new: newUser\n    });\n    setUser(newUser);\n  };\n  const handleOrgChange = e => {\n    const newOrg = e.target.value;\n    logger.logUserInteraction('IntegrationForm', 'ORG_CHANGE', {\n      previous: org,\n      new: newOrg\n    });\n    setOrg(newOrg);\n  };\n  const handleIntegrationTypeChange = (e, value) => {\n    logger.logUserInteraction('IntegrationForm', 'INTEGRATION_TYPE_SELECT', {\n      selected_type: value,\n      user_id: user,\n      org_id: org\n    });\n    setCurrType(value);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"User\",\n        value: user,\n        onChange: handleUserChange,\n        sx: {\n          mt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Organization\",\n        value: org,\n        onChange: handleOrgChange,\n        sx: {\n          mt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        id: \"integration-type\",\n        options: Object.keys(integrationMapping),\n        sx: {\n          width: 300,\n          mt: 2\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          label: \"Integration Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 38\n        }, this),\n        onChange: handleIntegrationTypeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), currType && /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(CurrIntegration, {\n        user: user,\n        org: org,\n        integrationParams: integrationParams,\n        setIntegrationParams: setIntegrationParams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), (integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.credentials) && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(DataForm, {\n        integrationType: integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.type,\n        credentials: integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.credentials\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(IntegrationForm, \"IaNxmgGMZHKiIKMT00HsJz7NFJU=\");\n_c = IntegrationForm;\nvar _c;\n$RefreshReg$(_c, \"IntegrationForm\");","map":{"version":3,"names":["useState","useEffect","Box","Autocomplete","TextField","AirtableIntegration","NotionIntegration","HubSpotIntegration","DataForm","logger","jsxDEV","_jsxDEV","integrationMapping","IntegrationForm","_s","integrationParams","setIntegrationParams","user","setUser","org","setOrg","currType","setCurrType","CurrIntegration","info","type","user_id","org_id","has_credentials","Boolean","credentials","handleUserChange","e","newUser","target","value","logUserInteraction","previous","new","handleOrgChange","newOrg","handleIntegrationTypeChange","selected_type","display","justifyContent","alignItems","flexDirection","sx","width","children","label","onChange","mt","fileName","_jsxFileName","lineNumber","columnNumber","id","options","Object","keys","renderInput","params","integrationType","_c","$RefreshReg$"],"sources":["/Users/yashgupta/Downloads/vectorshift-assignment/frontend/src/integration-form.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n    Box,\n    Autocomplete,\n    TextField,\n} from '@mui/material';\nimport { AirtableIntegration } from './integrations/airtable';\nimport { NotionIntegration } from './integrations/notion';\nimport { HubSpotIntegration } from './integrations/hubspot';\nimport { DataForm } from './data-form';\nimport logger from './services/logger';\n\nconst integrationMapping = {\n    'Notion': NotionIntegration,\n    'Airtable': AirtableIntegration,\n    'HubSpot': HubSpotIntegration,\n};\n\nexport const IntegrationForm = () => {\n    const [integrationParams, setIntegrationParams] = useState({});\n    const [user, setUser] = useState('TestUser');\n    const [org, setOrg] = useState('TestOrg');\n    const [currType, setCurrType] = useState(null);\n    const CurrIntegration = integrationMapping[currType];\n\n    // Log component mount\n    useEffect(() => {\n        logger.info('IntegrationForm', 'COMPONENT_MOUNT');\n        return () => {\n            logger.info('IntegrationForm', 'COMPONENT_UNMOUNT');\n        };\n    }, []);\n\n    // Log integration type changes\n    useEffect(() => {\n        if (currType) {\n            logger.info('IntegrationForm', 'INTEGRATION_TYPE_CHANGED', {\n                type: currType,\n                user_id: user,\n                org_id: org\n            });\n        }\n    }, [currType, user, org]);\n\n    // Log integration params changes\n    useEffect(() => {\n        if (integrationParams.type) {\n            logger.info('IntegrationForm', 'INTEGRATION_PARAMS_UPDATED', {\n                type: integrationParams.type,\n                has_credentials: Boolean(integrationParams.credentials)\n            });\n        }\n    }, [integrationParams]);\n\n    const handleUserChange = (e) => {\n        const newUser = e.target.value;\n        logger.logUserInteraction('IntegrationForm', 'USER_CHANGE', {\n            previous: user,\n            new: newUser\n        });\n        setUser(newUser);\n    };\n\n    const handleOrgChange = (e) => {\n        const newOrg = e.target.value;\n        logger.logUserInteraction('IntegrationForm', 'ORG_CHANGE', {\n            previous: org,\n            new: newOrg\n        });\n        setOrg(newOrg);\n    };\n\n    const handleIntegrationTypeChange = (e, value) => {\n        logger.logUserInteraction('IntegrationForm', 'INTEGRATION_TYPE_SELECT', {\n            selected_type: value,\n            user_id: user,\n            org_id: org\n        });\n        setCurrType(value);\n    };\n\n  return (\n    <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' sx={{ width: '100%' }}>\n        <Box display='flex' flexDirection='column'>\n        <TextField\n            label=\"User\"\n            value={user}\n            onChange={handleUserChange}\n            sx={{mt: 2}}\n        />\n        <TextField\n            label=\"Organization\"\n            value={org}\n            onChange={handleOrgChange}\n            sx={{mt: 2}}\n        />\n        <Autocomplete\n            id=\"integration-type\"\n            options={Object.keys(integrationMapping)}\n            sx={{ width: 300, mt: 2 }}\n            renderInput={(params) => <TextField {...params} label=\"Integration Type\" />}\n            onChange={handleIntegrationTypeChange}\n        />\n        </Box>\n        {currType && \n        <Box>\n            <CurrIntegration user={user} org={org} integrationParams={integrationParams} setIntegrationParams={setIntegrationParams} />\n        </Box>\n        }\n        {integrationParams?.credentials && \n        <Box sx={{mt: 2}}>\n            <DataForm integrationType={integrationParams?.type} credentials={integrationParams?.credentials} />\n        </Box>\n        }\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}