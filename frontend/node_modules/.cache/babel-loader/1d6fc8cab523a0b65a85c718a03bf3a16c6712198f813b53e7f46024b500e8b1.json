{"ast":null,"code":"var _jsxFileName = \"/Users/yashgupta/Downloads/vectorshift-assignment/frontend/src/data-form.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Box, TextField, Button } from '@mui/material';\nimport axios from 'axios';\nimport logger from './services/logger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpointMapping = {\n  'Notion': 'notion',\n  'Airtable': 'airtable',\n  'HubSpot': 'hubspot'\n};\nexport const DataForm = ({\n  integrationType,\n  credentials\n}) => {\n  _s();\n  const [loadedData, setLoadedData] = useState(null);\n  const endpoint = endpointMapping[integrationType];\n  const handleLoad = async () => {\n    const startTime = performance.now();\n    try {\n      logger.logUserInteraction('DataForm', 'LOAD_DATA_CLICK', {\n        integration_type: integrationType\n      });\n      const formData = new FormData();\n      formData.append('credentials', JSON.stringify(credentials));\n      const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\n      const data = response.data;\n      logger.logApiCall('DataForm', `/integrations/${endpoint}/load`, 'POST', startTime, response.status, {\n        integration_type: integrationType,\n        items_count: Array.isArray(data) ? data.length : 0\n      });\n      setLoadedData(data);\n      logger.info('DataForm', 'DATA_LOAD_SUCCESS', {\n        integration_type: integrationType,\n        items_count: Array.isArray(data) ? data.length : 0,\n        duration_ms: performance.now() - startTime\n      });\n    } catch (e) {\n      var _e$response, _e$response$data;\n      logger.error('DataForm', 'DATA_LOAD_ERROR', e, {\n        integration_type: integrationType,\n        endpoint: endpoint\n      });\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n  const handleClear = () => {\n    logger.logUserInteraction('DataForm', 'CLEAR_DATA', {\n      integration_type: integrationType\n    });\n    setLoadedData(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Loaded Data\",\n        value: loadedData || '',\n        sx: {\n          mt: 2\n        },\n        InputLabelProps: {\n          shrink: true\n        },\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoad,\n        sx: {\n          mt: 2\n        },\n        variant: \"contained\",\n        children: \"Load Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClear,\n        sx: {\n          mt: 1\n        },\n        variant: \"contained\",\n        children: \"Clear Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(DataForm, \"5cDt2cux/nLAg6lHurbYodgFI4w=\");\n_c = DataForm;\nvar _c;\n$RefreshReg$(_c, \"DataForm\");","map":{"version":3,"names":["useState","Box","TextField","Button","axios","logger","jsxDEV","_jsxDEV","endpointMapping","DataForm","integrationType","credentials","_s","loadedData","setLoadedData","endpoint","handleLoad","startTime","performance","now","logUserInteraction","integration_type","formData","FormData","append","JSON","stringify","response","post","data","logApiCall","status","items_count","Array","isArray","length","info","duration_ms","e","_e$response","_e$response$data","error","alert","detail","handleClear","display","justifyContent","alignItems","flexDirection","width","children","label","value","sx","mt","InputLabelProps","shrink","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","_c","$RefreshReg$"],"sources":["/Users/yashgupta/Downloads/vectorshift-assignment/frontend/src/data-form.js"],"sourcesContent":["import { useState } from 'react';\nimport {\n    Box,\n    TextField,\n    Button,\n} from '@mui/material';\nimport axios from 'axios';\nimport logger from './services/logger';\n\nconst endpointMapping = {\n    'Notion': 'notion',\n    'Airtable': 'airtable',\n    'HubSpot': 'hubspot',\n};\n\nexport const DataForm = ({ integrationType, credentials }) => {\n    const [loadedData, setLoadedData] = useState(null);\n    const endpoint = endpointMapping[integrationType];\n\n    const handleLoad = async () => {\n        const startTime = performance.now();\n        try {\n            logger.logUserInteraction('DataForm', 'LOAD_DATA_CLICK', {\n                integration_type: integrationType\n            });\n\n            const formData = new FormData();\n            formData.append('credentials', JSON.stringify(credentials));\n            \n            const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\n            const data = response.data;\n            \n            logger.logApiCall(\n                'DataForm',\n                `/integrations/${endpoint}/load`,\n                'POST',\n                startTime,\n                response.status,\n                {\n                    integration_type: integrationType,\n                    items_count: Array.isArray(data) ? data.length : 0\n                }\n            );\n\n            setLoadedData(data);\n            \n            logger.info('DataForm', 'DATA_LOAD_SUCCESS', {\n                integration_type: integrationType,\n                items_count: Array.isArray(data) ? data.length : 0,\n                duration_ms: performance.now() - startTime\n            });\n        } catch (e) {\n            logger.error('DataForm', 'DATA_LOAD_ERROR', e, {\n                integration_type: integrationType,\n                endpoint: endpoint\n            });\n            alert(e?.response?.data?.detail);\n        }\n    }\n\n    const handleClear = () => {\n        logger.logUserInteraction('DataForm', 'CLEAR_DATA', {\n            integration_type: integrationType\n        });\n        setLoadedData(null);\n    }\n\n    return (\n        <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' width='100%'>\n            <Box display='flex' flexDirection='column' width='100%'>\n                <TextField\n                    label=\"Loaded Data\"\n                    value={loadedData || ''}\n                    sx={{mt: 2}}\n                    InputLabelProps={{ shrink: true }}\n                    disabled\n                />\n                <Button\n                    onClick={handleLoad}\n                    sx={{mt: 2}}\n                    variant='contained'\n                >\n                    Load Data\n                </Button>\n                <Button\n                    onClick={handleClear}\n                    sx={{mt: 1}}\n                    variant='contained'\n                >\n                    Clear Data\n                </Button>\n            </Box>\n        </Box>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}